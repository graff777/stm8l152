#include "stm8l15x.h"
#include "stdio.h"
//#include "libmbus.h"
//#include "stdbool.h"																		/*=== Работа UART в режиме прерываний (Interrupt MODE) ===*/
//#include "stdint.h"
void delay_ms(uint32_t time)
{
	while(time--);
}
 
  main()
{
	GPIO_DeInit(GPIOC);
	GPIO_DeInit(GPIOA);
	//GPIO_Init(GPIOA, GPIO_Pin_6, GPIO_Mode_In_FL_No_IT);  
  //GPIO_Init(GPIOC, GPIO_Pin_3, GPIO_Mode_Out_PP_High_Fast);  
	GPIOC->DDR|=GPIO_Pin_3;
	GPIOC->CR1|=GPIO_Pin_3;
	CLK_DeInit();    //CLK_CKDIVR
	CLK_PeripheralClockConfig(CLK_Peripheral_ADC1, ENABLE);
	CLK_PeripheralClockConfig(CLK_Peripheral_USART1, ENABLE);
	USART_Init   (USART1, 
                9600, 
								USART_WordLength_8b, 
								USART_StopBits_1,
                USART_Parity_No,  
								USART_Mode_Tx);
	USART_ClockInit(USART1,                      //Настройка частоты USART1
								USART_Clock_Enable,
								USART_CPOL_Low,
								USART_CPHA_1Edge,
								USART_LastBit_Enable);
	USART_ITConfig(USART1, USART_IT_TXE, ENABLE);
	//USART_ClearFlag(USART1, USART_FLAG_TC);
	ADC_DeInit(ADC1);
	ADC_Init     (ADC1, 
	              ADC_ConversionMode_Single,
								ADC_Resolution_8Bit,
								ADC_Prescaler_2
								);
  //CLK->PCKENR2 |= CLK_PCKENR2_ADC1; Встроенный датчик температуры
	ADC_Cmd(ADC1,ENABLE);
	ADC_ChannelCmd(ADC1, ADC_Channel_TempSensor, ENABLE);
	ADC_TempSensorCmd(ENABLE);
	ADC_SamplingTimeConfig(ADC1, ADC_Group_FastChannels, ADC_SamplingTime_4Cycles);
	ADC_SoftwareStartConv(ADC1);
	//ADC_DMACmd(ADC1, DISABLE);
	ADC_ITConfig(ADC1, ADC_IT_EOC, ENABLE);
	ADC_SchmittTriggerConfig(ADC1, ADC_Channel_TempSensor, ENABLE);
	 //CLK_PCKENR1 |= PCKEN15;
	

  
	/* In this Mode it is advised to use the following functions:
     - void USART_ITConfig(USART_TypeDef* USARTx, USART_IT_TypeDef USART_IT, FunctionalState
                      		 NewState);
     - ITStatus USART_GetITStatus(USART_TypeDef* USARTx, USART_IT_TypeDef USART_IT);
     - void USART_ClearITPendingBit(USART_TypeDef* USARTx, USART_IT_TypeDef USART_IT);*/
	
		
                          
				
  //uint16_t result = ADC_GetConversionValue(ADC1);
  while(1)
  {
	
	USART_SendData8(USART1, 'Word');
	delay_ms(50000);
  }
}


#ifdef USE_FULL_ASSERT
void assert_failed(uint8_t* file, uint32_t line)
{
while (1)
  {
  }
}
#endif
